# -*- coding: utf-8 -*-
"""POC= 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h38wlCrv5hKRPGFpfoiNLxpvJZiZlrfp
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as mlt
import seaborn as sns

from google.colab import files
data = files.upload()

vs = pd.read_csv('poc1insurance dataset.csv')
vs

vs.shape

vs.tail(3)

vs.head(4)

vs['region'].unique()

vs['smoker'].unique()

vs['children'].unique()

vs['sex'].unique()

vs.isnull().sum()

(vs==0).sum()

corr_vs = vs[['age'	,'sex',	'bmi',	'children',	'smoker',	'region',	'charges']].corr()
sns.heatmap(corr_vs,annot=True,cmap='GnBu')
mlt.title('EDA')
mlt.show()

v_s = vs.describe()
v_s

describe1 = v_s.corr()
sns.heatmap(describe1,annot= True,cmap='GnBu' )
mlt.title('describe')
mlt.show()

sns.pairplot(v_s)

x= vs.iloc[:,[0,1,2,3,4,5]]
y= vs.iloc[:,[6]]
x

y

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

x['region'] = le.fit_transform(x['region'])
x['sex'] = le.fit_transform(x['sex'])
x['smoker'] =le.fit_transform(x['smoker'])

x

y

from sklearn.preprocessing import StandardScaler
X1 = StandardScaler().fit_transform(x)
X1

from sklearn.preprocessing import Normalizer
from sklearn.preprocessing import scale

from sklearn import preprocessing
X = preprocessing.scale(x)
X

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(X,y,train_size=0.75,test_size=0.25,random_state=47)
x_train

x_test

y_test

x_train

y_train

from sklearn.linear_model import LinearRegression
model_x = LinearRegression().fit(x_train,y_train)
model_x

predict_mx = model_x.predict(x_test)
predict_mx

y_test

from sklearn.metrics import mean_absolute_error
m_error = model_x.predict(x_test)
mean_absolute_error(m_error,y_test)

mean_absolute_error(y_test,predict_mx)

from sklearn.metrics import mean_squared_error
s_error = model_x.predict(x_test)
mean_squared_error(s_error,y_test)

head_map = x.corr()
sns.heatmap(head_map,annot=True,cmap='coolwarm')
mlt.title('corr-redection')
mlt.show()

mlt.scatter(x_train[:,[0]],y_train,color = "green")
mlt.plot(x_train,model_x.predict(x_train),color = "red")
mlt.title("charges predection")
mlt.xlabel("items")
mlt.ylabel("charges")
mlt.show()

from sklearn.metrics import r2_score
r2_score(predict_mx,y_test)

